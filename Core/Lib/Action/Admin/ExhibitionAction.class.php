<?phpclass ExhibitionAction extends AdminAction{	public function _initialize() {		parent::_initialize();	//RBAC 验证接口初始化	}		public function index(){		import('ORG.Util.Page');//导入分页类		$ExhibitionDAO = D('Exhibition');		$map=array();		if(isset($_GET['type'])){			switch($_GET['type']){				case "1":					$condition="%".$_GET['input']."%";					$map[$_GET['field']]=array('like',$condition);					$this->assign('input',$_GET['input']);					$this->assign('field',$_GET['field']);				break;				case "2":					if(intval($_GET['district'])>0){						$map['province_id']=$_GET['province'];						$map['city_id']=$_GET['city'];						$map['district_id']=$_GET['district'];							}else if(intval($_GET['district'])<0&&intval($_GET['city'])>0){						$map['province_id']=$_GET['province'];						$map['city_id']=$_GET['city'];					}else if(intval($_GET['district'])<0&&intval($_GET['city'])<0&&intval($_GET['city'])>0){						$map['province_id']=$_GET['province'];					}				break;				case "3":					$map['period_start']=array('egt',$_GET['start']);					$map['period_end']=array('elt',$_GET['end']);					$this->assign('start',$_GET['start']);					$this->assign('end',$_GET['end']);				break;			}		}		$privince=$province=D('areas')->where(array('parent_id'=>1))->select();		$this->assign('province',$province);		$count=$ExhibitionDAO->where($map)->count();		$Page=new Page($count,C('web_admin_pagenum')); //实例化分页类，传入总数		// 进行分页数据查询 注意page方法的参数的前面部分是当前的页数使用 $_GET[p]获取		$nowPage = isset($_GET['p'])?$_GET['p']:1;		$show       = $Page->show();// 分页显示输出		$list = $ExhibitionDAO->where($map)->order('id ASC')->page($nowPage.','.C('web_admin_pagenum'))->select();		$this->assign('list',$list);		$this->assign('page',$show);		$this->assign('type',$_GET['type']);		$this->display();	}		public function edit(){		$ExhibitionDAO = D('Exhibition');		if(isset($_POST['dosubmit'])) {			if($ExhibitionDAO -> create()){				$ExhibitionDAO ->modifytime=time();//增加一个更新时间，要不如果更新没改动就会失败				if($ExhibitionDAO->save()){					$this->assign("jumpUrl",U('/Admin/Exhibition/index'));                    $this->success('编辑成功！');				}else{					$this->error('编辑失败!');				}			}else{				$this->error($ExhibitionDAO->getError());			}		}else{			$id = $this->_get('id','intval',0);            if(!$id)$this->error('参数错误!');            $info = $ExhibitionDAO->getExhibition(array('id'=>$id));			$AreaDao = D('areas');			$province=$AreaDao->where(array('parent_id'=>1))->select();			$city=$AreaDao->where(array('parent_id'=>$info['province_id']))->select();			$district=$AreaDao->where(array('parent_id'=>$info['city_id']))->select();			$type = D('Exhibitiontype')->getAllType(array('status'=>1),'sort DESC');			$this->assign('province',$province);			$this->assign('city',$city);			$this->assign('district',$district);            $this->assign('info',$info);			$this->assign('type',$type);            $this->display('add');		}					}		//删除展览类型	public function del(){		$id = $this->_get('id','intval',0);        if(!$id)$this->error('参数错误!');        $ExhibitionDAO = D('Exhibition');        if($ExhibitionDAO->delType('id='.$id)){            $this->assign("jumpUrl",U('/Admin/Exhibition/index'));            $this->success('删除成功！');        }else{            $this->error('删除失败!');        }	}			public function add(){		$ExhibitionDAO = D('Exhibition');		if(isset($_POST['dosubmit'])) {			if($ExhibitionDAO -> create()){				$exhibition_id = $ExhibitionDAO->add();				if($exhibition_id){					$this->assign("jumpUrl",U('/Admin/Exhibition/attachment?id='.$exhibition_id));                    $this->success('添加成功！，继续下一步操作');				}else{					$this->error('添加失败!');				}			}else{				$this->error($ExhibitionDAO->getError());			}		}else{			$privince=$province=D('areas')->where(array('parent_id'=>1))->select();			$this->assign('province',$province);			$ExhibitionTypeDB = D('Exhibitiontype')->getAllType(array('status'=>1),'sort DESC');            $this->assign('type',$ExhibitionTypeDB);			$this->display();		}	}		public function changestatus(){		$id =$_REQUEST['id'];		$ExhibitionDAO = D('Exhibition');		$map['id']=intval($id);		$exhibition=$ExhibitionDAO->getExhibition($map,'id,status');		if($exhibition['status']=='1'){			$map['status']=0;		}else if($exhibition['status']=='0'){			$map['status']=1;		}else{			$map['status']=1;		}		$result=$ExhibitionDAO->save($map);		if($result){			$this->ajaxReturn($result,'状态修改成功',1);		}else{			$this->ajaxReturn($result,'状态修改失败',0);		}	}		public function getAreas(){        $where['parent_id']=$_REQUEST['areaId'];        $area=D('areas')->where($where)->select();        $this->ajaxReturn($area);    }	//展览类型列表	public function type(){		import('ORG.Util.Page');//导入分页类		$map=array();		$ExhibitionTypeDB = D('Exhibitiontype');		$count=$ExhibitionTypeDB->where($map)->count();		$Page=new Page($count); //实例化分页类，传入总数		// 进行分页数据查询 注意page方法的参数的前面部分是当前的页数使用 $_GET[p]获取        $nowPage = isset($_GET['p'])?$_GET['p']:1;        $show       = $Page->show();// 分页显示输出		$list = $ExhibitionTypeDB->where($map)->order('id ASC')->page($nowPage.','.C('web_admin_pagenum'))->select();				//dump($count); //for debug				$this->assign('list',$list);		$this->assign('page',$show);		//$this->assign('type',$show);		$this->display();	}		//增加展览类型	public function type_add(){		$ExhibitionTypeDB=D('Exhibitiontype');		if(isset($_POST['dosubmit'])){			if($ExhibitionTypeDB->create()){				if($ExhibitionTypeDB->add()){					$this->assign("jumpUrl",U('/Admin/Exhibition/type'));					$this->success('添加成功！');				}else{					$this->error('添加失败!');				}			}else{				$this->error();			}		}else{            $this->display();		}	}		//编辑展览类型	public function type_edit(){		$ExhibitionTypeDB = D('Exhibitiontype');   //调用制定一直的模型层		if(isset($_POST['dosubmit'])) {            //根据表单提交的POST数据创建数据对象            if($ExhibitionTypeDB->create()){                if($ExhibitionTypeDB->save()){                    $this->assign("jumpUrl",U('/Admin/Exhibition/type'));                    $this->success('编辑成功！');                }else{                     $this->error('编辑失败!');                }            }else{                $this->error($ExhibitionTypeDB->getError());            }        }else{            $id = $this->_get('id','intval',0);            if(!$id)$this->error('参数错误!');            $info = $ExhibitionTypeDB->getType(array('id'=>$id));            $this->assign('info',$info);            $this->display();        }	}		//删除展览类型	public function type_del(){		$id = $this->_get('id','intval',0);        if(!$id)$this->error('参数错误!');        $ExhibitionTypeDB=D('Exhibitiontype');        if($ExhibitionTypeDB->delType('id='.$id)){            $this->assign("jumpUrl",U('/Admin/Exhibition/type'));            $this->success('删除成功！');        }else{            $this->error('删除失败!');        }	}		public function attachment(){		$this->display();	}	/*	public function verification(){		import('ORG.Util.Page');//导入分页类		$map=array();		$ExhibitionDAO = D('Exhibition');		$map_0['is_verified']=0;// 待审核		$count_0=$ExhibitionDAO->where($map)->count();		$Page_0=new Page($count,C('web_admin_pagenum')); //实例化分页类，传入总数		// 进行分页数据查询 注意page方法的参数的前面部分是当前的页数使用 $_GET[p]获取        $nowPage = isset($_GET['p'])?$_GET['p']:1;        $show       = $Page->show();// 分页显示输出		$list = $ExhibitionDAO->where($map)->order('id ASC')->page($nowPage.','.C('web_admin_pagenum'))->select();				$this->assign('list',$list);		$this->assign('page',$show);		$this->display();	}		*/}?>